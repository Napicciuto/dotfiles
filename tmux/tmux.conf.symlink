set-option -g default-command "reattach-to-user-namespace -l $SHELL; cd ."
set -g default-terminal "screen-256color"
set -g history-limit 20000

# use VI
set-window-option -g mode-keys vi

# status bar
set-option -g status-utf8 on

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=black,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# C-b is not acceptable -- Vim uses it
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Bind a to go to beginning of line (ctrl-a expected behaviour)
bind a send-prefix

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

unbind C-f
bind C-f command-prompt "switch-client -t %%"

# kill
unbind k
bind k confirm-before "kill-window"

unbind ^x
bind ^x kill-pane

unbind ^T
bind ^T split-window -p 25

# horizontal and vertical splits
unbind |
bind | split-window -h
unbind _
bind _ split-window

# tile all windows
unbind =
bind = select-layout tiled

# cycle through panes
unbind ^A
bind ^A select-pane -t :.+

unbind Right
bind Right resize-pane -R 8
unbind Left
bind Left resize-pane -L 8
unbind Up
bind Up resize-pane -U 4
unbind Down
bind Down resize-pane -D 4

# Set window notifications
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Highlight active window
set-window-option -g window-status-current-bg red

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l
bind l select-pane -R

# Copy mode works as Vim
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# rm mouse mode fail
setw -g mode-mouse on

# color
set -g default-terminal "screen-256color"
